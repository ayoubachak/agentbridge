name: AgentBridge Package Deployment

on:
  push:
    tags:
      - 'v*.*.*' # Run workflow on version tags, e.g. v1.0.0
  workflow_dispatch: # Allow manual triggering

jobs:
  test-js:
    name: Test JavaScript Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Run tests
        run: npm run test

  test-flutter:
    name: Test Flutter Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
        working-directory: ./flutter
      - name: Run Flutter analyze
        run: flutter analyze
        working-directory: ./flutter
      - name: Run Flutter tests
        run: flutter test
        working-directory: ./flutter

  build-js:
    name: Build JavaScript Packages
    needs: [test-js]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build packages
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: js-packages
          path: |
            packages/*/dist
            packages/*/build

  build-flutter:
    name: Build Flutter Package
    needs: [test-flutter]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
        working-directory: ./flutter
      - name: Build package
        run: flutter build
        working-directory: ./flutter
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-package
          path: ./flutter/build

  publish-js:
    name: Publish to npm
    needs: [build-js]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: js-packages
          path: packages
      - name: Publish Core Package
        run: |
          cd packages/core
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish React Package
        run: |
          cd packages/react
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish Angular Package
        run: |
          cd packages/angular
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish React Native Package
        run: |
          cd packages/react-native
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-flutter:
    name: Publish to pub.dev
    needs: [build-flutter]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      - name: Setup pub credentials
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_DEV_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: flutter-package
          path: flutter/build
      - name: Publish Flutter package
        run: flutter pub publish --force
        working-directory: ./flutter

  create-release:
    name: Create GitHub Release
    needs: [publish-js, publish-flutter]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Generate release notes
        id: release_notes
        run: |
          echo "# AgentBridge ${{ steps.get_version.outputs.VERSION }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## Packages Released" >> RELEASE_NOTES.md
          echo "- @agentbridge/core@${{ steps.get_version.outputs.VERSION }}" >> RELEASE_NOTES.md
          echo "- @agentbridge/react@${{ steps.get_version.outputs.VERSION }}" >> RELEASE_NOTES.md
          echo "- @agentbridge/angular@${{ steps.get_version.outputs.VERSION }}" >> RELEASE_NOTES.md
          echo "- @agentbridge/react-native@${{ steps.get_version.outputs.VERSION }}" >> RELEASE_NOTES.md
          echo "- agentbridge: ${{ steps.get_version.outputs.VERSION }} (Flutter)" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          git log $(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))..HEAD --pretty=format:"- %s" >> RELEASE_NOTES.md
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 